class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int n= matrix.length;
        int low = matrix[0][0], high = matrix[n - 1][n - 1], mid;
        while (low <= high)
        {
            mid = low + (high - low) / 2;
            int count = getCountLessOrEqual(matrix, mid, n);
            if (count < k) low = mid + 1;
            else high = mid - 1;
        }
        return low;
    }

    private int getCountLessOrEqual(int[][] matrix, int val, int n) 
    {
        int i = 0, j = n - 1;
        int res = 0;
        while (i < n) 
        {
            while (j >= 0 && matrix[i][j] > val) j--;
            res += j + 1;
            i++;
        }
        return res;
    }
}
